from math import *
from collections import deque, defaultdict
from functools import reduce

def is_edge(r, c, N):
  return r == 0 or r == (N-1) or c == 0 or c == (N-1)

def is_not_dup(arr):
  N = len(arr)
  s = sum(arr, [])
  s = set(s)
  return len(s) == N**2

def validation(arr):
  N = len(arr)
  for i in range(N**2):
    r = i // N; c = i % N
    if r == 0 or r == (N-1) or c == 0 or c == (N-1):
      break
    a = 0; b = 0
    for dr in range(-1, 2):
      for dc in range(-1, 2):
        if arr[r][c] > arr[r+dr][c+dc]:
          a += 1
        else:
          b += 1
    if a == b:
      return False
  return True and is_not_dup(arr)

def print_mat(arr):
  N = len(arr)
  for i in range(N**2):
    r = i // N; c = i % N
    if c:
      print(' ', end='')
    print(arr[r][c], end='')
    if c == N-1:
      print()

def main():
  N = int(input())
  arr = [[0] * N for _ in range(N)]
  n = 1
  for i in range((N**2 + 1) // 2):
    r = (i * 2) // N; c = (i * 2) % N
    arr[r][c] = n
    n += 1
  for i in range(N**2 // 2):
    r = (i * 2 + 1) // N; c = (i * 2 + 1) % N
    arr[r][c] = n
    n += 1
  # r = list(map(int, input().split()))
  # arr.append(r)
  # N = len(r)
  # for i in range(N-1):
  #   r = list(map(int, input().split()))
  #   arr.append(r)
  # print(validation(arr))
  print_mat(arr)


if __name__ == "__main__":
  main()
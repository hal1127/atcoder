from math import *
from collections import deque, defaultdict
from functools import reduce

def main():
  X, A, D, N = map(int, input().split())

  if D < 0:
    final = A + D * (N - 1)
    A = final
    D *= -1

  # lower bound
  left = -1; right = N
  while right - left > 1:
    mid = left + (right - left) // 2
    target = A + D * mid
    if target >= X:
      right = mid
    else:
      left = mid

  if right == N:
    ans = abs((A + D * (N - 1)) - X)
    return
  else:
    ans = abs((A + D * right) - X)

  # upper bound
  left = -1; right = N
  while right - left > 1:
    mid = left + (right - left) // 2
    target = A + D * mid
    if target <= X:
      left = mid
    else:
      right = mid

  if left == -1:
    ans = min(ans, abs(A - X))
    print(ans)
    return
  else:
    ans = min(ans, abs((A + D * left) - X))

  # print([ A + D * i for i in range(N) ])
  print(ans)


if __name__ == "__main__":
  main()